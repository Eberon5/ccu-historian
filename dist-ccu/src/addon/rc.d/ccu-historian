#!/bin/sh

# add-on information
ADDON_ID=ccu-historian

# directories
ADDON_DIR=/usr/local/addons/${ADDON_ID}
ETC_DIR=/usr/local/etc
RCD_DIR=/usr/local/etc/config/rc.d
WWW_DIR=/usr/local/etc/config/addons/www/${ADDON_ID}

stop() {
    logger -t ${ADDON_ID} -p user.debug "Stopping"
    # stop process
    pid=$(cat /var/run/${ADDON_ID}.pid)
    start-stop-daemon -K -q -p /var/run/${ADDON_ID}.pid
    # wait for process to exit
    while kill -0 $pid > /dev/null 2>&1; do sleep 1; done
    logger -t ${ADDON_ID} -p user.info "Stopped"
}

start() {
    logger -t ${ADDON_ID} -p user.debug "Starting"

    # generate configuration if it does not yet exist
    if [[ ! -e ${ADDON_DIR}/ccu-historian.config ]]; then
      logger -t ccu-historian -p user.info "Generating configuration"
      
      cp -a ${ADDON_DIR}/ccu-historian-sample.config ${ADDON_DIR}/ccu-historian.config

      # set devices.device1.plugin1.type if CUxD is installed
      if [[ -x /usr/local/addons/cuxd/cuxd ]]; then
        grep -q "devices.device1.plugin1.type=CUXD" ${ADDON_DIR}/ccu-historian.config
        if [ $? -eq 1 ]; then
          echo "devices.device1.plugin1.type=CUXD" >>${ADDON_DIR}/ccu-historian.config
        fi
      fi

      # set the own ip address
      ipaddress=$(ip -4 route get 1 | head -1 | cut -d' ' -f8 | tr -d '\n')
      if [[ -n "${ipaddress}" ]]; then
        sed -i "s/webServer\.historianAddress=.*/webServer.historianAddress='${ipaddress}'/g" ${ADDON_DIR}/ccu-historian.config
        sed -i "s/devices\.device1\.address=.*/devices.device1.address='${ipaddress}'/g" ${ADDON_DIR}/ccu-historian.config
      fi
    fi

    # check which java version and heap size to use
    if [[ -x "/opt/java/bin/java" ]]; then
      # CCU3/RaspberryMatic
      JAVA_BIN=/opt/java/bin/java
    elif which java > /dev/null; then
      # java is on the search path 
      JAVA_BIN=java      
    else
      echo "ERROR: Java binary not found"
      logger -t homematic -p user.error "ERROR: Java binary not found for CCU-Historian startup"
      exit 1
    fi

    # start process
    start-stop-daemon -S -q -b -m -p /var/run/${ADDON_ID}.pid --exec ${JAVA_BIN} -- -Xmx512m -Djava.util.prefs.userRoot=${ADDON_DIR} -Djava.util.prefs.systemRoot=${ADDON_DIR} -jar ${ADDON_DIR}/ccu-historian/ccu-historian.jar -config ${ADDON_DIR}/ccu-historian.config -loglevel off
    logger -t ${ADDON_ID} -p user.info "Started"
}

info() {
    echo "Info: <b>CCU-Historian Add-On</b><br>"
    echo "Info: (c) 2011-2020 Mathias Dzionsko, u.a.<br>"
    echo "Info: <a href="https://github.com/mdzio/ccu-historian" target="_blank">https://github.com/mdzio/ccu-historian</a>"
    echo "Name: CCU-Historian"
    echo "Version: $(cat ${ADDON_DIR}/VERSION)"
    echo "Operations: uninstall restart"
    echo "Config-Url: /addons/ccu-historian/config.cgi"
    echo "Update: /addons/ccu-historian/update-check.cgi"
}

uninstall() {
    logger -t ${ADDON_ID} -p user.debug "Uninstalling"
    
    # stop monitoring
    if [[ -x /usr/bin/monit ]]; then
        monit unmonitor ${ADDON_ID}
    fi
    # stop process
    stop
    # update add-on registry
    ${ADDON_DIR}/update_hm_addons.tcl -d ccu-historian
    # remove files
    rm ${RCD_DIR}/${ADDON_ID}
    rm ${ETC_DIR}/monitCCUHistorian.cfg
    rm -rf ${ADDON_DIR}
    rm -rf ${WWW_DIR}
    # reload monit config
    if [[ -x /usr/bin/monit ]]; then
        monit reload
    fi
    
    logger -t ${ADDON_ID} -p user.info "Uninstalled"
}

case "$1" in
  ""|start)
	  start
	;;
  stop)
	  stop
	;;
  restart|reload)
	  stop
	  sleep 2
	  start
	;;
  uninstall)
    uninstall
  ;;
  info)
    info
  ;;
  *)
    echo "usage: ${ADDON_ID} {start|stop|restart|info|uninstall}" >&2
    exit 1
  ;;
esac

exit $?
