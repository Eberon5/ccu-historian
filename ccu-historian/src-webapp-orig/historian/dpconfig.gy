// setup page
def renderer=new mdz.ccuhistorian.webapp.PageRenderer(servlet: this)

renderer.head={
	title 'CCU-Historian: Datenpunktkonfiguration'
	// bootstrap-table CSS
	link href:'../external/bootstrap-table/bootstrap-table.css', rel:'stylesheet'
}

renderer.content={
	div(class:'panel panel-default') {
		div(class:'panel-heading') {
			h3 class:'panel-title', 'Datenpunktkonfiguration'
		}
		div(class:'panel-body') {
			form(method:'post') {
				div(id:'toolbar', class:'btn-group') {
					button class:'btn btn-default', type:'submit', name:'save', value:1, 'Änderungen speichern'
				}
				table(
                    id:'dp-table',
					'data-toggle':'table',
					'data-toolbar':'#toolbar', 
					'data-show-columns':true,
					'data-search':true,
					'data-trim-on-search':false,
				) {
					thead {
						tr {
							th 'data-sortable':true, 'Schnittstelle'
							th 'data-sortable':true, 'Kanal'
							th 'data-visible':false, 'data-sortable':true,  'Adresse'
							th 'data-sortable':true, 'Parameter'
							th 'data-visible':false, 'data-sortable':true, 'Raum'
							th 'data-visible':false, 'data-sortable':true, 'Gewerk'
							th 'data-visible':false, 'data-sortable':true, 'data-align':'right', 'ID'
							th 'data-visible':false, 'data-sortable':true, 'Einheit'
							th 'data-visible':false, 'data-sortable':true, 'Typ'
                            th 'data-sortable':true, 'data-align':'right', 'Einträge'
                            th(
                                'data-field':'disabled', 
                                'data-formatter':'inputFormatterDisabled', 
                                'data-events':'inputEventsDisabled',
                                'data-align':'center', 
                                'Inaktiv'
                            )
                            th 'data-field':'hidden', 'data-align':'center', 'Versteckt'
                            th 'data-field':'preprocType', 'Vorverarb.'
                            th 'data-field':'proprocParam', 'Parameter'
						}
					}
					tbody {
						database.dataPoints.findAll { !it.historyHidden }.each { dp ->
							def last=database.getLast(dp)
							tr {
								td dp.id.interfaceId
								td dp.attributes.displayName?:dp.id.address
								td dp.id.address
								td dp.id.identifier
								td dp.attributes.room
								td dp.attributes.function
								td dp.idx
								td dp.attributes.unit
								td dp.attributes.type
                                td database.getCount(dp, null, null)
                                td dp.historyDisabled?'checked':''
                                td dp.historyHidden?'checked':''
                                td dp.attributes.preprocType?:0
                                td dp.attributes.preprocParam?:''
/*                                
                                td {
                                    select(name:"preproc_type_$dp.idx", size:1) {
                                        option(value:0, *:(((dp.attributes.preprocType?:0)==0)?[selected:'selected']:[:]), '-')
                                        option(value:1, *:(((dp.attributes.preprocType?:0)==1)?[selected:'selected']:[:]), 'Delta K.')
                                        option(value:2, *:(((dp.attributes.preprocType?:0)==2)?[selected:'selected']:[:]), 'Zeitl.K.')
                                    }
                                }
                                td {
                                    input type:'text', size:5, maxlength:30, name:"preproc_param_$dp.idx", value:utils.format(dp.attributes.preprocParam)
                                }
*/                                
							}
						}
					}
				}
			}
		}
	}
}

renderer.end={
	// bootstrap-table JS
	script src:'../external/bootstrap-table/bootstrap-table.js'
	script src:'../external/bootstrap-table/bootstrap-table-de-DE.js'
    script { mkp.yieldUnescaped '''\
        var $dpTable=$('#dp-table');
        
        function inputFormatterDisabled(value) {
            var checked = value ? 'checked' : '';
            return '<input type="checkbox" ' + checked + ' />';
        }

        window.inputEventsDisabled = {
            'change :checkbox': function (e, value, row, index) {
                row.disabled = $(e.target).prop('checked')?'checked':'';
//                $dpTable.bootstrapTable('updateRow', {
//                    index: index,
//                    row: row        
//                });
            }
        };
    ''' }
}

// render page
renderer.render()

/*

<% 
import mdz.hc.DataPoint
import groovy.transform.Field
import org.slf4j.Logger
import org.slf4j.LoggerFactory

@Field
private final static Logger log = LoggerFactory.getLogger('mdz.ccuhistorian.webapp.DPManage')

def displayName(dp) {
	dp.id.interfaceId+'.'+(dp.attributes.displayName?:dp.id.address)+'.'+dp.id.identifier
}

utils.catchToLog(log) {

include 'page-begin.gy'
def ctx=request.session.getAttribute('ctx')

def dataPoints
def msg=''
if (ctx.user.loggedIn) { 
	dataPoints=database.dataPoints
	if (params.save) {
		def updated=[]
		def errors=[]
		dataPoints.each { dp ->
			def preprocType=params."preproc_type_$dp.idx" as Integer
			if (preprocType==null) return
			def preprocParam=params."preproc_param_$dp.idx"
			if (preprocParam) {
				preprocParam=utils.parseNumber(preprocParam)?.doubleValue()
				if (preprocParam==null) { 
					errors << (displayName(dp)+': <b>Parameter</b> ist keine g&uuml;ltige Zahl.')
					return 
				}
			} else preprocParam=null
			def disabled=(params."disabled_$dp.idx"=='1')
			def hidden=(params."hidden_$dp.idx"=='1')

			if (preprocType==1) {
				if ((preprocParam?:0.0)<0.0) { 
					errors << (displayName(dp)+': <b>Parameter</b> darf bei <b>Delta Kompression</b> nicht negativ sein.')
					return 
				}
				if (dp.id.identifier in ['PRESS_LONG', 'PRESS_SHORT']) { 
					errors << (displayName(dp)+': <b>Delta Kompression</b> ist hier nicht sinnvoll.')
					return 
				} 
			} else if (preprocType==2) {
				if ((preprocParam?:0.0)<0.0) { 
					errors << (displayName(dp)+': <b>Parameter</b> darf bei <b>Zeitl. Kompression</b> nicht negativ sein.')
					return 
				}
			}
			
			def orig_dp=dp.clone()
		    dp.historyDisabled=disabled
		    dp.historyHidden=hidden
		    if ((dp.attributes.preprocType?:0)!=preprocType)
				dp.attributes.preprocType=preprocType
			dp.attributes.preprocParam=preprocParam
			if (dp!=orig_dp)
				if (utils.catchToLog(log) {
			    	database.updateDataPoint dp
				    updated << displayName(dp)
				}) errors << (displayName(dp)+': Datenbankzugriff ist fehlgeschlagen.')
		}
		if (updated) 
			msg+='<p>Folgende Datenpunkte wurden ge&auml;ndert: '+updated.join(', ')+'</p>'
		if (errors) 
			msg+='<p class="bad">&Auml;nderung ist bei folgenden Datenpunkten fehlgeschlagen:<br/>'+
				errors.join('<br/>')+'</p>'
	}
}

%><title>CCU-Historian: Verwaltung Datenpunkte</title>
<script src="TableFilter/tablefilter_all_min.js" type="text/javascript"></script><% 
%><h1>Verwaltung Datenpunkte</h1><%

if (!ctx.user.loggedIn) { 
	%><p class="bad">Sie sind nicht (mehr) angemeldet oder Ihre Berechtigungen reichen nicht aus!</p>
	<p><a href="index.html">Zur Anmeldung</a></p><% 
} else {
	println msg 
	%><form action="dbmanage.html" method="post">	
	<table><tr><th>Aktion</th><td><input name="save" type="submit" value=" &Auml;nderungen speichern "></td></tr></table>
	<table id="datapoints">
		<thead><tr>
			<th>Schnittstelle</th>		
			<th>Anzeigename</th>
			<th>Parameter</th>
			<th style="width:7em">Adresse</th>
			<th style="width:3em">ID</th>
			<th>Eintr&auml;ge</th>
			<th>Inaktiv</th>
			<th>Versteckt</th>
			<th>Vorverarb.</th>
			<th>Parameter</th>
		</tr></thead><tbody><%
	dataPoints.each {
		%><tr>
			<td><%=utils.escapeHtml(it.id.interfaceId)%></td>
			<td><%=utils.escapeHtml(it.attributes.displayName)%></td>
			<td><%=utils.escapeHtml(it.id.identifier)%></td>
			<td><%=utils.escapeHtml(it.id.address)%></td>
			<td class="number"><%=it.idx%></td>
			<td class="number"><%=database.getCount(it, null, null)%></td>
			<td><input type="checkbox" name="disabled_<%=it.idx%>" value="1"<%=it.historyDisabled?' checked="checked"':''%>/></td>
			<td><input type="checkbox" name="hidden_<%=it.idx%>" value="1"<%=it.historyHidden?' checked="checked"':''%>/></td>
			<td><select name="preproc_type_<%=it.idx%>" size="1">
				<option value="0"<%=((it.attributes.preprocType?:0)==0)?' selected="selected"':''%>>-</option>
				<option value="1"<%=((it.attributes.preprocType?:0)==1)?' selected="selected"':''%>>Delta K.</option>
				<option value="2"<%=((it.attributes.preprocType?:0)==2)?' selected="selected"':''%>>Zeitl.K.</option>
			</select></td>
			<td><input name="preproc_param_<%=it.idx%>" type="text" 
				value="<%=utils.escapeHtml(utils.format(it.attributes.preprocParam)) %>" size="5" maxlength="20"></td>
		</tr><%
		} 
	%></tbody></table>
	</form>
	<script type="text/javascript">  
		var tf_props={
				filters_row_index: 1,
				display_all_text: " [ Alle ]",
				col_0: "select",
				col_2: "select",
				col_4: "none",
				col_5: "none",
				col_6: "none",
				col_7: "none",
				col_8: "none",
				col_9: "none",
				col_number_format: [null, null, null, null, "eu", null, null, null, null, "eu"],
				on_keyup: true,  
                on_keyup_delay: 500,
				sort: true,
				sort_config: { sort_types: ["string", "string", "string", "string", "eu", "none", "none", "none", "none", "none"] }	
		}
		setFilterGrid("datapoints", tf_props);  
    </script><% 
}
include 'page-end.gy'
} // catchToLog
%>

*/